apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: generate-globalrolebindings-from-annotations
spec:
  admission: true
  background: true
  rules:
    - generate:
        foreach:
          - apiVersion: management.cattle.io/v3
            context:
              - name: user
                variable:
                  jmesPath: element | split(@, '.') | @[1]
              - name: role
                variable:
                  jmesPath: element | split(@, '.') | @[2]
            data:
              metadata:
                labels:
                  fleet: '{{ request.object.metadata.name }}'
              globalRoleName: 'gorizond-{{ role }}-{{ request.object.metadata.name }}'
              userName: '{{ user }}'
            kind: GlobalRoleBinding
            list: keys(request.object.metadata.annotations) | [?starts_with(@, 'gorizond-user.')]
            name: gorizond-{{ role }}-{{ user }}-{{ request.object.metadata.name }}
      match:
        resources:
          kinds:
            - management.cattle.io/v3/FleetWorkspace
      name: sync-gorizond-bindings
    - name: mark-globalrolebinding-as-canremove-if-annotation-missing
      match:
        resources:
          kinds:
            - "management.cattle.io/v3/FleetWorkspace"
      context:
        - name: globalBindings
          apiCall:
            urlPath: "/apis/management.cattle.io/v3/globalrolebindings"
            jmesPath: "items[?metadata.labels.fleet=='{{ request.object.metadata.name }}']"
      mutate:
        foreach:
          - list: "{{ globalBindings }}"
            preconditions:
              all:
                - key: "{{ keys(request.object.metadata.annotations) | [?starts_with(@, 'gorizond-user.')] | [?contains(@, element.userName)] | length(@) }}"
                  operator: Equals
                  value: 0
            patchStrategicMerge:
              metadata:
                labels:
                  canremove: "true"
