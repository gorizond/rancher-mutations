apiVersion: kyverno.io/v2beta1
kind: ClusterPolicy
metadata:
  name: enforce-fleetworkspace-annotations
spec:
  admission: true
  background: true
  rules:
    - context:
        - name: fleet_name
          variable:
            value: '{{ request.object.metadata.labels.fleet }}'
        - apiCall:
            jmesPath: keys(metadata.annotations) | [?starts_with(@, 'gorizond-user.')]
            method: GET
            urlPath: /apis/management.cattle.io/v3/fleetworkspaces/{{ fleet_name }}
          name: fleetworkspace_annotations
        - name: required_annotations
          variable:
            jmesPath: keys(request.object.metadata.annotations) | [?starts_with(@, 'gorizond-user.')]
      match:
        any:
          - resources:
              kinds:
                - management.cattle.io/v3/GlobalRoleBinding
              selector:
                matchLabels:
                  binding: check
      mutate:
        patchStrategicMerge:
          metadata:
            labels:
              binding: ready
              cleanup.kyverno.io/ttl: 1m
      name: invalidate-globalrolebinding
      preconditions:
        all:
          - key: '{{ fleet_name }}'
            operator: NotEquals
            value: ''
          - key: '{{ required_annotations }}'
            operator: AnyNotIn
            value: '{{ fleetworkspace_annotations || `[]` }}'
      skipBackgroundRequests: true
    - context:
        - name: fleet_name
          variable:
            value: '{{ request.object.metadata.labels.fleet }}'
        - apiCall:
            jmesPath: keys(metadata.annotations) | [?starts_with(@, 'gorizond-user.')]
            method: GET
            urlPath: /apis/management.cattle.io/v3/fleetworkspaces/{{ fleet_name }}
          name: fleetworkspace_annotations
        - name: required_annotations
          variable:
            jmesPath: keys(request.object.metadata.annotations) | [?starts_with(@, 'gorizond-user.')]
      match:
        any:
          - resources:
              kinds:
                - management.cattle.io/v3/GlobalRoleBinding
              selector:
                matchLabels:
                  binding: check
      mutate:
        patchStrategicMerge:
          metadata:
            labels:
              binding: ready
              cleanup.kyverno.io/ttl: 'null'
      name: remove-label-if-valid
      preconditions:
        all:
          - key: '{{ required_annotations }}'
            operator: AllIn
            value: '{{ fleetworkspace_annotations || `[]` }}'