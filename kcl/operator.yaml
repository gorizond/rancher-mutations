apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kclruns.krm.kcl.dev
spec:
  group: krm.kcl.dev
  names:
    kind: KCLRun
    listKind: KCLRunList
    plural: kclruns
    singular: kclrun
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KCLRun is the Schema for the kclruns API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KCLRunSpec defines the desired state of KCLRun
            properties:
              params:
                additionalProperties:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                description: Params are the parameters in key-value pairs format.
                type: object
              source:
                description: Source is a required field for providing a KCL script
                  inline.
                type: string
              credentials:
                additionalProperties:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                description: credentials in key-value pairs format.
                type: object
              config:
                description: config are pkg/api/ConfigSpec.
                type: object
                properties:
                  arguments:
                    type: array
                    items:
                      type: string
                  settings:
                    type: array
                    items:
                      type: string
                  overrides:
                    type: array
                    items:
                      type: string
                  pathSelectors:
                    type: array
                    items:
                      type: string
                  vendor:
                    type: boolean
                  sortKeys:
                    type: boolean
                  showHidden:
                    type: boolean
                  disableNone:
                    type: boolean
                  debug:
                    type: boolean
                  strictRangeCheck:
                    type: boolean
              matchConstraints:
                description: Set resource filter match constraints for the matched types.
                type: object
                properties:
                  resourceRules:
                    type: array
                    items:
                      type: object
                      properties:
                        apiGroups:
                          type: array
                          items:
                            type: string
                        apiVersions:
                          type: array
                          items:
                            type: string
                        kinds:
                          type: array
                          items:
                            type: string
            required:
            - source
            type: object
          status:
            description: KCLRunStatus defines the observed state of KCLRun
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kcl-webhook
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kcl-webhook-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - krm.kcl.dev
  resources:
  - kclruns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - krm.kcl.dev
  resources:
  - kclruns/finalizers
  verbs:
  - update
- apiGroups:
  - krm.kcl.dev
  resources:
  - kclruns/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kcl-webhook-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kcl-webhook-role
subjects:
- kind: ServiceAccount
  name: kcl-webhook
  namespace: default
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcl
  namespace: default
spec:
  ca:
    secretName: tls-kcl
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcl
  namespace: default
spec:
  secretName: webhook-kcl
  dnsNames:
    - kcl-webhook-server.default.svc
    - kcl-webhook-server.default.svc.cluster.local
  issuerRef:
    name: kcl
    kind: Issuer
    namespace: default
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kcl-webhook-server
  annotations:
    cert-manager.io/inject-ca-from: default/kcl
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
      - v1alpha1
    clientConfig:
      service:
        name: kcl-webhook-server
        namespace: default
        path: /mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: kcl-webhook-server.krm.kcl.dev
    namespaceSelector: {}
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - management.cattle.io
        apiVersions:
          - v3
        operations:
          - CREATE
        resources:
          - users
        scope: '*'
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kcl-webhook-server
  name: kcl-webhook-server
  namespace: default
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8081
  selector:
    app: kcl-webhook-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kcl-webhook-server
  name: kcl-webhook-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcl-webhook-server
  template:
    metadata:
      labels:
        app: kcl-webhook-server
    spec:
      containers:
      - args:
        - -tls-cert-file=/etc/webhook/certs/tls.crt
        - -tls-key-file=/etc/webhook/certs/tls.key
        - -addr=:8081
        image: kcllang/webhook-server:v0.11.0
        imagePullPolicy: IfNotPresent
        name: kcl-webhook-server
        volumeMounts:
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      serviceAccountName: kcl-webhook
      volumes:
      - emptyDir: {}
        name: webhook-certs